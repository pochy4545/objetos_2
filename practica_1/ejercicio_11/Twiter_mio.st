Object subclass: #AbstractTweet	instanceVariableNames: 'contenido usuario size'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!AbstractTweet commentStamp: 'Anonymous 4/15/2018 16:08' prior: 0!abstracta!!AbstractTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:02'!usuario:unUser usuario:=unUser.! !!AbstractTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:48'!size:tam size:=tam! !!AbstractTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:49'!size ^size! !!AbstractTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:01'!contenido:unContenido contenido:=unContenido.! !!AbstractTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:02'!usuario ^ usuario.! !!AbstractTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:01'!contenido ^contenido.! !!AbstractTweet methodsFor: 'initialization' stamp: 'Anonymous 4/15/2018 16:07'!initialize 	self size:140.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AbstractTweet class	instanceVariableNames: ''!!AbstractTweet class methodsFor: 'instance creation' stamp: 'Anonymous 4/15/2018 20:03'!newWith: aUser and: aContent ((aContent size) between: 1 and: 140)ifTrue: [^self new contenido: aContent ; usuario: aUser ]		ifFalse:[Transcript show: 'tamaño incorrecto , debe estar entre 1 y 140 caracteres'].! !AbstractTweet subclass: #ReTweet	instanceVariableNames: 'original'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!ReTweet commentStamp: 'initialize 4/15/2018 13:46' prior: 0!class retweet ejercicio 10 !!ReTweet methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 19:03'!original:unOrigen original:=unOrigen.! !!ReTweet methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 19:03'!original ^original.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ReTweet class	instanceVariableNames: ''!!ReTweet class methodsFor: 'instance creation' stamp: 'Anonymous 4/15/2018 20:19'!newWith: aUser and: aContent origin: aOriginTweet	^((super newWith: aUser and:  aContent)original: aOriginTweet ).! !TestCase subclass: #TestReTweet	instanceVariableNames: 'reTweet'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!TestReTweet methodsFor: 'initialization' stamp: 'Anonymous 4/23/2018 22:05'!setUp self tweet: Tweet new .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TestReTweet class	instanceVariableNames: 'user content tweet reTweet'!!TestReTweet class methodsFor: 'initialization' stamp: 'initialize 4/15/2018 15:22'!setUp	|user2 content2|	user2:= User new: 'Nombre2'.	user:= User new: 'Nombre'.	content:= 'Contentido'.	content2:= 'Contentido2'.	tweet:= Tweet newWith: user2 and: content2.    reTweet:= ReTweet newWith: user and: content origin: tweet. ! !TestCase subclass: #TestTweet	instanceVariableNames: 'tweet'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!TestTweet methodsFor: 'initialization' stamp: 'Anonymous 4/23/2018 21:58'!setUp self tweet: Tweet new .! !!TestTweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/23/2018 22:04'!testagregarRetweet self assert: (self tweet retweets size = 0). self tweet agregarRetweet: (ReTweet newWith: (User new:'pochi') and:'hola'  origin:(Tweet newWith:(User new: 'pepe')  and:'hola' )) . self assert: (self tweet retweets size =1).! !!TestTweet methodsFor: 'accessing' stamp: 'Anonymous 4/23/2018 21:56'!tweet:unTweettweet:=unTweet! !!TestTweet methodsFor: 'accessing' stamp: 'Anonymous 4/23/2018 21:56'!tweet^tweet! !TestCase subclass: #TestTwitter	instanceVariableNames: 'twitter usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!TestTwitter methodsFor: 'initialization' stamp: 'Anonymous 4/23/2018 21:14'!setUp self twitter: Twitter new . self usuario: (User new:'agustin'). ! !!TestTwitter methodsFor: 'accessing' stamp: 'Anonymous 4/23/2018 21:12'!usuario ^usuario ! !!TestTwitter methodsFor: 'accessing' stamp: 'Anonymous 4/23/2018 21:10'!twitter:unTwit twitter :=unTwit! !!TestTwitter methodsFor: 'accessing' stamp: 'Anonymous 4/23/2018 21:10'!twitter ^twitter! !!TestTwitter methodsFor: 'accessing' stamp: 'Anonymous 4/23/2018 21:12'!usuario:unUser usuario :=unUser.! !!TestTwitter methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/23/2018 21:23'!testagregarUsuario self twitter agregarUsuario:'pochi' . self assert: (self twitter users size  )==1. self twitter agregarUsuario:'pochi' . self assert: (self twitter users size  )==1. self twitter agregarUsuario:'dos'.  self assert: (self twitter users size  )==2.! !TestCase subclass: #TestUser	instanceVariableNames: 'user tweet1'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!TestUser methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 21:35'!tweet1 ^tweet1  ! !!TestUser methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 21:35'!tweet1:unTwet tweet1:=unTwet  ! !!TestUser methodsFor: 'initialization' stamp: 'Anonymous 4/15/2018 21:34'!setUp  self user: (User new:'pochi').  self tweet1:(Tweet newWith: self user  and:'contenido').! !!TestUser methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 21:23'!user:unUser user:=unUser! !!TestUser methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 21:23'!user ^user! !!TestUser methodsFor: 'tests' stamp: 'Anonymous 4/15/2018 22:04'!testAgregarTweet self assert: self user tweets size equals: 0. self user agregarTweet: (self tweet1). self assert: self user tweets size equals:1.! !!TestUser methodsFor: 'tests' stamp: 'Anonymous 4/15/2018 21:28'!testCreacion self user nombre: 'agustin'. self assert: self user nombre equals:  'agustin'.! !!TestUser methodsFor: 'tests' stamp: 'Anonymous 4/15/2018 22:09'!testRetwett self user retweet: self tweet1  contenido: 'hola'. "self assert: self tweet1  retweets  size equals: 0." "me fijo si el retwit que hice se agrego a los retwits del twit origen " self assert: self tweet1 retweets first usuario nombre equals: self user nombre . "self assert: self tweet1  retweets  size equals: 0." "self assert: self user tweets size equals: 0.""me fijo si el retwit se agrego a mis tuit y el contenido es el mismo" self assert: self user tweets first original contenido  equals: self tweet1 contenido . "self assert: self user tweets size equals: 1."! !AbstractTweet subclass: #Tweet	instanceVariableNames: 'retweets'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!Tweet commentStamp: 'initialize 4/15/2018 13:47' prior: 0!class tweet ejercicio 10!!Tweet methodsFor: 'initialization' stamp: 'Anonymous 4/15/2018 19:35'!initialize	super initialize. 	self retweets: OrderedCollection new.! !!Tweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:37'!agregarRetweet:unTwet self retweets add: unTwet.! !!Tweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:35'!retweets:unaColecion retweets:=unaColecion.! !!Tweet methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:35'!retweets ^ retweets.! !Object subclass: #Twitter	instanceVariableNames: 'users'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!Twitter commentStamp: 'initialize 4/15/2018 13:46' prior: 0!class twitter ejercio 10!!Twitter methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 18:15'!users ^users! !!Twitter methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 18:32'!informar:unTexto Transcript show: unTexto.! !!Twitter methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 18:15'!users:unaColecion users:=unaColecion.! !!Twitter methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 21:17'!comprobarRepetido:unNombre^((self users count:[:x| x nombre  == unNombre  ])> 0) ! !!Twitter methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 21:21'!agregarUsuario: unNombre  (self comprobarRepetido:unNombre)  ifTrue:[self informar: 'error']  ifFalse:[ users add: (User new:unNombre)]! !!Twitter methodsFor: 'initialization' stamp: 'Anonymous 4/15/2018 21:12'!initialize 	self users: Set new.! !Object subclass: #User	instanceVariableNames: 'tweets nombre'	classVariableNames: ''	poolDictionaries: ''	category: 'Twiter_mio'!!User commentStamp: 'initialize 4/15/2018 13:46' prior: 0!clase User ejercicio 10!!User methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 18:22'!nombre:unNombre nombre:=unNombre.! !!User methodsFor: 'accessing' stamp: 'Anonymous 4/15/2018 21:06'!nombre ^ nombre! !!User methodsFor: 'initialization' stamp: 'Anonymous 4/15/2018 19:08'!initialize    self	tweets: OrderedCollection new.! !!User methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 20:01'!retweet: aTweet contenido: unContenido     |R|	  R:= (ReTweet newWith: self and: unContenido   origin: aTweet  ).	  self agregarTweet:R.	  aTweet agregarRetweet:R.	  ! !!User methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:09'!postear:unMensaje self agregarTweet:(Tweet newWith: self and: unMensaje ).! !!User methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:08'!tweets  ^tweets! !!User methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:09'!agregarTweet:unTweet self tweets add: unTweet.! !!User methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/15/2018 19:07'!tweets:unaColecion tweets:=unaColecion.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!User class	instanceVariableNames: ''!!User class methodsFor: 'instance creation' stamp: 'Anonymous 4/15/2018 21:11'!new: aName  ^ self new  nombre: aName.   	! !